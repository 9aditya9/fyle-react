{"version":3,"sources":["services/Axios.js","services/BanksService.js","components/Dropdown.js","components/Header.js","components/BanksTable.js","components/Favorites.js","components/ViewBanks.js","App.js","index.js"],"names":["Api","axios","create","baseURL","GetBanksFromApi","a","city","request","get","params","q","data","then","response","data_1","GetSearchCompletion","searched","result","FavoritesWithLocalStorage","localStorageKey","useState","JSON","parse","localStorage","getItem","value","setValue","useEffect","setItem","stringify","ResponseCache","localStorageResponseKey","setResponse","useStyles","makeStyles","button","display","root","minWidth","alignItems","justifyContent","alignSelf","justify","width","select","fontSize","padding","Dropdown","cityOptions","handleCityChange","classes","open","setOpen","FormControl","className","Select","onClose","onOpen","onChange","map","MenuItem","label","Header","style","backgroundColor","to","color","marginLeft","marginRight","BanksTable","Banks","handleFav","favoritesIFSC","page","setPage","rowsPerPage","setRowsPerPage","setSearched","searchOptions","setSearchOptions","timer","setTimer","fontWeight","fontStyle","paperContainer","maxHeight","handleDebounce","func","timeout","clearTimeout","t","setTimeout","debounce","BanksService","catch","error","alert","Paper","Autocomplete","options","val","ifsc","toLowerCase","includes","address","branch","state","bank_name","renderInput","console","log","TextField","margin","variant","event","target","Table","TableHead","TableRow","TableCell","Button","endIcon","TableBody","filter","slice","element","index","hover","Checkbox","icon","checkedIcon","name","checked","district","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","Favorites","favorites","removeFav","favSearched","setFavSearched","lable","e","overflowX","justifySelf","bullet","transform","title","borderRadius","boxShadow","pos","marginBottom","table","tableItem","ViewBanks","banksid","bank","Card","CardContent","Typography","gutterBottom","Object","keys","key","toUpperCase","App","setCity","banks","setBanks","setFavorites","favIFSC","favBankarr","favBank","forEach","splice","url","res","path","exact","render","props","match","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df2853cb.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst Api = axios.create({baseURL: 'https://banks-restapi.herokuapp.com/api/branches'\n})\n\nexport default Api","import { useState, useEffect } from 'react'\nimport Api from './Axios'\n\nconst GetBanksFromApi = async ({ city }) => {\n\tconst request = Api.get('/autocomplete', {params: {q: city}})\n\tconst data = request.then(response => response.data)\n\tconst data_1 = await data\n\treturn data_1\n\n}\n\nconst GetSearchCompletion = async ({ searched }) => {\n\tconst request = Api.get('',{ params: { q: searched } })\n\tconst data = request.then(response => response.data)\n\tconst data_1 = await data\n\treturn data_1.result\n}\n\nconst FavoritesWithLocalStorage = (localStorageKey) => {\n\tconst [value, setValue] = useState(\n\t\tJSON.parse(localStorage.getItem(localStorageKey)) || []\n\t)\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(localStorageKey, JSON.stringify(value))\n\t}, [value])\n\n\treturn [value, setValue]\n}\n\nconst ResponseCache = (localStorageResponseKey) => {\n\tconst [response, setResponse] = useState(\n\t\tJSON.parse(localStorage.getItem(localStorageResponseKey)) || {}\n\t)\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(localStorageResponseKey, JSON.stringify(response))\n\t}, [response])\n\n\treturn [response, setResponse]\n}\n\n\nexport default {\n\tGetBanksFromApi,\n\tGetSearchCompletion,\n\tFavoritesWithLocalStorage,\n\tResponseCache\n}","import { makeStyles } from '@material-ui/core';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { useState } from 'react';\nconst useStyles = makeStyles(() => ({\n\tbutton: {\n\t\tdisplay: 'block',\n\t},\n\troot: {\n\t\tminWidth: 120,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\talignSelf: 'center',\n\t\tjustify: 'center',\n\t\twidth: '100%',\n\t},\n\tselect: {\n\t\tfontSize: '30px',\n\t\tpadding: '2px',\n\t},\n}))\n\nconst Dropdown = ({ city, cityOptions, handleCityChange }) => {\n\tconst classes = useStyles()\n\tconst [open, setOpen] = useState(false)\n\treturn (\n\t\t<div>\n\t\t\t<FormControl className={classes.root}>\n\t\t\t\t<Select className={classes.select}\n\t\t\t\t\topen={open}\n\t\t\t\t\tonClose={() => setOpen(false)}\n\t\t\t\t\tonOpen={() => setOpen(true)}\n\t\t\t\t\tvalue={city}\n\t\t\t\t\tonChange={handleCityChange}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tcityOptions.map((city) => (\n\t\t\t\t\t\t\t<MenuItem value={city.value} key={city.value}>{city.label}</MenuItem>\n\n\t\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n}\n\nexport default Dropdown;","import React from 'react';\nimport { Link } from 'react-router-dom'\nfunction Header() {\n\treturn (\n\t\t<>\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{ backgroundColor: 'aliceblue' }}>\n\t\t\t\t<div className=\"container-fluid\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t\t<Link to=\"/fyle-react\" style={{ color: 'rgb(157, 5, 212)' }} className=\"navbar-brand nav-title mb-2 mb-lg-0\" >Home</Link>\n\t\t\t\t\t<div style={{color: 'rgb(157, 5, 212)', marginLeft: '20px', marginRight: '20px', fontSize: '25px'}}>FYLE TASK</div>\n\t\t\t\t\t<Link to=\"/fyle-react/favorites\" style={{ color: 'rgb(157, 5, 212)' }} className=\"navbar-brand nav-title mb-2 mb-lg-0\" >Favorites</Link>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport './BanksTable.css'\nimport { useState, useEffect } from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport { Paper, Table, TableBody, TableHead, TableRow, TableCell, TablePagination } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button'\nimport Favorite from '@material-ui/icons/Favorite'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport BanksService from '../services/BanksService';\nimport { Link } from 'react-router-dom'\n\nconst BanksTable = ({ Banks, handleFav, favoritesIFSC }) => {\n\tconst [page, setPage] = useState(0)\n\tconst [rowsPerPage, setRowsPerPage] = useState(3)\n\tconst [searched, setSearched] = useState(\"\")\n\tconst [searchOptions, setSearchOptions] = useState([])\n\tconst[timer, setTimer] = useState(\"\")\n\n\tconst useStyles = makeStyles({\n\t\troot: {\n\t\t\tfontWeight: 'bolder',\n\t\t\tfontStyle: 'italic',\n\t\t},\n\t\tpaperContainer: {\n\t\t\tmaxHeight: 440,\n\t\t},\n\t})\n\n\tfunction debounce(func, timeout = 600){\n\t\t// console.log(\"hello\", func);\n\t\treturn (...args) => {\n\t\t  clearTimeout(timer);\n\t\t  const t = setTimeout(func, timeout);\n\t\t  setTimer(t)\n\t\t};\n\t      }\n\tfunction handleApiCall() {\n\t\tBanksService.GetSearchCompletion({ searched })\n\t\t\t.then(result => setSearchOptions(result))\n\t\t\t.catch(error => {\n\t\t\t\talert('Search Completion Not Working')\n\t\t\t})\n\t}\n\t\n\tconst handleDebounce = debounce(handleApiCall)\n\tuseEffect(() => {\n\t\t// console.log(searched)\n\t\thandleDebounce()\n\t}, [searched])\n\n\tconst handleChangePage = (event, newPage) => {\n\t\tsetPage(newPage)\n\t}\n\n\tconst handleChangeRowsPerPage = (event) => {\n\t\tsetRowsPerPage(event.target.value)\n\t}\n\treturn (\n\t\t<div>\n\n\t\t\t<Paper className=\"paperContainer\">\n\t\t\t\t<Autocomplete\n\t\t\t\t\tonClose={() => setSearched(\"\")}\n\t\t\t\t\toptions={searchOptions.map((val) => {\n\t\t\t\t\t\tif (searched === \"\") {\n\t\t\t\t\t\t\treturn \"\"\n\t\t\t\t\t\t} else if (val.ifsc.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\treturn val.ifsc\n\t\t\t\t\t\t} else if (val.address.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\treturn val.address\n\t\t\t\t\t\t} else if (val.branch.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\treturn val.branch\n\t\t\t\t\t\t} else if (val.city.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\treturn val.city\n\t\t\t\t\t\t} else if (val.state.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\treturn val.state\n\t\t\t\t\t\t} else if (val.bank_name.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\treturn val.bank_name\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\trenderInput={(params) => {\n\t\t\t\t\t\tconsole.log(params);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TextField {...params} label=\"Search\" margin=\"20px\" variant=\"outlined\" onChange={(event) => {\n\t\t\t\t\t\t\t\tif (event.target.value) {\n\t\t\t\t\t\t\t\t\tconsole.log(searched)\n\t\t\t\t\t\t\t\t\tsetSearched(event.target.value)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tconsole.log(searched)\n\t\t\t\t\t\t\t\t\tsetSearched(\"\")\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead style={useStyles.root}>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell><Button endIcon={<FavoriteBorderIcon />} >Fav</Button></TableCell>\n\t\t\t\t\t\t\t<TableCell>IFSC</TableCell>\n\t\t\t\t\t\t\t<TableCell>Bank Name</TableCell>\n\t\t\t\t\t\t\t<TableCell>Branch</TableCell>\n\t\t\t\t\t\t\t<TableCell>Address</TableCell>\n\t\t\t\t\t\t\t<TableCell>City</TableCell>\n\t\t\t\t\t\t\t<TableCell>District</TableCell>\n\t\t\t\t\t\t\t<TableCell>State</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tBanks.filter((val) => {\n\n\t\t\t\t\t\t\t\tif (searched === \"\") {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.ifsc.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.address.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.branch.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.city.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.state.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.bank_name.toLowerCase().includes(searched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((element, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow hover key={index}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox onChange={handleFav} icon={<FavoriteBorderIcon />} checkedIcon={<Favorite />} name=\"checkedH\" checked={favoritesIFSC.includes(element.ifsc)} value={element.ifsc} />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{element.ifsc}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell style={{ color: 'blue' }}><Link to={\"/fyle-react/banks/\" + element.ifsc}>{element.bank_name}</Link></TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{element.branch}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{element.address}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{element.city}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{element.district}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{element.state}</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={[3, 5, 10, 24]}\n\t\t\t\t\tcomponent='div'\n\t\t\t\t\tcount={Banks.length}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tonChangePage={handleChangePage}\n\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\t\t\t/>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n}\nexport default BanksTable;","import React, { useState } from 'react';\nimport './BanksTable.css'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport { Paper, Table, TableBody, TableHead, TableRow, TableCell } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport Favorite from '@material-ui/icons/Favorite'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst Favorites = ({ favorites, removeFav }) => {\n\tconst [favSearched, setFavSearched] = useState(\"\")\n\n\tconst useStyles = makeStyles({\n\t\troot: {\n\t\t\tfontWeight: 'bolder',\n\t\t\tfontStyle: 'italic',\n\t\t},\n\t\tpaperContainer: {\n\t\t\tmaxHeight: 440,\n\t\t},\n\t})\n\n\n\treturn (\n\t\t<div>\n\t\t\t<Paper className=\"paperContainer\">\n\t\t\t\t<TextField lable=\"Search\" variant=\"outlined\" onChange={(e) => setFavSearched(e.target.value)} />\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead style={useStyles.root}>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell><Button endIcon={<FavoriteBorderIcon />} >Fav</Button></TableCell>\n\t\t\t\t\t\t\t<TableCell>IFSC</TableCell>\n\t\t\t\t\t\t\t<TableCell>Bank Name</TableCell>\n\t\t\t\t\t\t\t<TableCell>Branch</TableCell>\n\t\t\t\t\t\t\t<TableCell>Address</TableCell>\n\t\t\t\t\t\t\t<TableCell>City</TableCell>\n\t\t\t\t\t\t\t<TableCell>District</TableCell>\n\t\t\t\t\t\t\t<TableCell>State</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfavorites.filter((val) => {\n\t\t\t\t\t\t\t\tif (favSearched === \"\") {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.ifsc.toLowerCase().includes(favSearched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.address.toLowerCase().includes(favSearched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.branch.toLowerCase().includes(favSearched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.city.toLowerCase().includes(favSearched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.state.toLowerCase().includes(favSearched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t} else if (val.bank_name.toLowerCase().includes(favSearched.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).map((element, index) => (\n\t\t\t\t\t\t\t\t<TableRow hover key={index}>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Checkbox onChange={removeFav} icon={<FavoriteBorderIcon />} checkedIcon={<Favorite />} name=\"checkedH\" value={element.ifsc} checked={true} />\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{element.ifsc}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell style={{ color: 'blue' }}>{element.bank_name}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{element.branch}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{element.address}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{element.city}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{element.district}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{element.state}</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))\n\n\t\t\t\t\t\t}\n\t\t\t\t\t</TableBody>\n\n\t\t\t\t</Table>\n\n\n\n\t\t\t</Paper>\n\t\t</div>\n\t);\n}\n\nexport default Favorites;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\toverflowX: 'auto',\n\t\tjustifySelf: 'center',\n\t},\n\tbullet: {\n\t\tdisplay: 'inline-block',\n\t\tmargin: '0 2px',\n\t\ttransform: 'scale(0.8)',\n\t},\n\ttitle: {\n\t\tfontSize: 30,\n\t\tborderRadius: 50,\n\t\tboxShadow: '20px 20px 60px #f8f8fcdc, -20px -20px 60px #9998a844',\n\t},\n\tpos: {\n\t\tmarginBottom: 12,\n\t},\n\ttable: {\n\t\tdisplay: 'block',\n\t\t// backgroundColor: 'aliceblue',\n\n\t\talignItems: 'center',\n\t\tjustifySelf: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\ttableItem: {\n\t\tborderRadius: 50,\n\n\t}\n\n});\n\n\n\n\nconst ViewBanks = ({ Banks, banksid }) => {\n\tconst classes = useStyles();\n\tconsole.log(banksid, Banks)\n\tif (!banksid || !Banks) {\n\t\treturn <h1>Please provide a bank id to show it's details!</h1>\n\t}\n\tvar bank = Banks.filter((value) => value.ifsc === banksid)[0]\n\tif (!bank) {\n\t\treturn <h1>Please provide a bank id to show it's details!</h1>\n\t}\n\tconsole.log(bank)\n\treturn (\n\t\t<Card className={classes.root}>\n\t\t\t<CardContent>\n\t\t\t\t<Typography className={classes.title} color=\"black\" gutterBottom>\n\t\t\t\t\tBank's Detail\n\t\t\t\t</Typography>\n\t\t\t\t<Typography className={classes.table}>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(bank).map((key) => (\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t{/* <th>{key}</th> */}\n\t\t\t\t\t\t\t\t\t<tr className={classes.tableItem}>\n\t\t\t\t\t\t\t\t\t\t<td><h4>{key.toUpperCase()}</h4></td>\n\t\t\t\t\t\t\t\t\t\t<td style={{fontSize: '30px'}}>~</td>\n\t\t\t\t\t\t\t\t\t\t<td style={{fontSize: '22px', color: 'rgb(157, 5, 212)'}}>{bank[key]}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t</table>\n\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t</Card>\n\t)\n};\n\nexport default ViewBanks;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useEffect, useState } from 'react';\nimport BanksService from './services/BanksService';\nimport Dropdown from './components/Dropdown';\nimport Header from './components/Header'\nimport BanksTable from './components/BanksTable';\nimport Favorites from './components/Favorites'\nimport ViewBanks from './components/ViewBanks';\n\nconst cityOptions = [\n  { label: \"Bangalore\", value: \"BANGALORE\" },\n  { label: \"Mumbai\", value: \"MUMBAI\" },\n  { label: \"Chennai\", value: \"CHENNAI\" },\n  { label: \"Kolkata\", value: \"KOLKATA\" },\n  { label: \"Delhi\", value: \"DELHI\" },\n];\n\nconst App = () => {\n  const [city, setCity] = useState('BANGALORE')\n  const [banks, setBanks] = useState([])\n  const [favorites, setFavorites] = BanksService.FavoritesWithLocalStorage('favorites')\n  const [response, setResponse] = BanksService.ResponseCache('response')\n\n  const handleFav = (event) => {\n    var favIFSC = event.target.value\n    var favBankarr = banks.filter((val) => favIFSC === val.ifsc)\n    console.log(favBankarr);\n    var favBank = favBankarr[0] || ''\n    // console.log(favBank);\n    if (favBank)\n      setFavorites([...favorites, favBank])\n\n    if (favorites && favorites.length > 0) {\n      favorites.forEach((val, index) => {\n        if (val.ifsc === favBank.ifsc) {\n          // console.log('equal', index);\n          favorites.splice(index, 1)\n          // console.log(favorites);\n          setFavorites([...favorites])\n          return\n        }\n      })\n    }\n    else {\n      setFavorites([...favorites, favBank])\n    }\n    // console.log(favorites)\n  }\n\n  var favoritesIFSC = favorites.map((value) => value.ifsc)\n  // console.log(favoritesIFSC)\n\n  const removeFav = (event) => {\n    console.log(event.target.value)\n    if (favorites && favorites.length > 0) {\n      favorites.forEach((val, index) => {\n        if (val.ifsc === event.target.value) {\n          console.log('Remove favorite', index);\n          favorites.splice(index, 1)\n          console.log(favorites);\n          setFavorites([...favorites])\n          return\n        }\n      })\n    }\n  }\n\n  const handleCityChange = (e) => {\n    setCity(e.target.value)\n    console.log(city)\n  }\n\n\n  useEffect(() => {\n    // BanksService\n    //   .GetBanksFromApi({ city })\n    //   .then(result => setBanks(result))\n    //   .catch(error => {\n    //     alert('Api call unsuccessful')\n    //   })\n    //   console.log(banks);\n    var url = '/autocomplete?q=' + city\n    if (response[url]) {\n      console.log(response[url])\n      var data = response[url]\n      setBanks(data.result)\n      console.log('response caching working')\n      return\n    }\n    else {\n      const result = BanksService.GetBanksFromApi({ city })\n      // console.log(result)\n      // console.log('api is working fine');\n      result.then(res => {\n        // console.log(res)\n        response[url] = res\n        // console.log(response);\n        setResponse({ ...response })\n        // console.log(response)\n        setBanks(res.result)\n        // console.log(url)\n      })\n    }\n    // console.log(banks)\n  }, [city])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route\n            path=\"/fyle-react\"\n            exact\n            render={(props) => (\n              <>\n                <Dropdown city={city} handleCityChange={handleCityChange} cityOptions={cityOptions} />\n                <BanksTable Banks={banks} handleFav={handleFav} favoritesIFSC={favoritesIFSC} />\n\n              </>\n            )}\n          />\n          <Route\n            path=\"/fyle-react/favorites\"\n            exact\n            render={(props) => (\n              <>\n                <Favorites favorites={favorites} removeFav={removeFav} />\n              </>\n            )}\n          />\n          <Route\n            path=\"/fyle-react/banks/:banksid\"\n            exact\n            render={(props) => (\n              <>\n                <ViewBanks Banks={banks} banksid={props.match.params.banksid} />\n              </>\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}